# Multi-stage build for frontend
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code and config files
COPY src/ ./src/
#COPY public/ ./public/
COPY index.html ./
COPY vite.config.ts ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY tsconfig*.json ./
COPY eslint.config.js ./

# Build the frontend
RUN npm run build

# Production stage
FROM nginx:alpine

# Remove default Nginx configuration files and default website content.
RUN rm -f /etc/nginx/conf.d/*.conf && rm -rf /usr/share/nginx/html/*

# Create a directory for your appâ€™s static files.
RUN mkdir -p /usr/share/nginx/html/plots

# Copy built assets from the builder stage into the /plots directory.
COPY --from=builder /app/dist /usr/share/nginx/html/plots

# Copy your custom Nginx configuration.
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx in the foreground.
CMD ["nginx", "-g", "daemon off;"]
